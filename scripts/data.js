var controlsList = {
    "ejButton": {
        "enabled": "disabled",
        "text": "content",
        "cssClass": "cssClass",
        "contentType": "deprecated-It is achieved by CssClass",
        "enableRTL": "enableRtl",
        "height": "deprecated",
        "showRoundedCorner": "deprecated-It is achieved by CssClass",
        "htmlAttributes": "deprecated-It is achieved by using event listener",
        "prefixIcon": "iconCss",
        "suffixIcon": "iconCss",
        "imagePosition": "iconPosition",
        "repeatButton": "deprecated-It is achieved by Click event bind to the button",
        "size": "deprecated-It is achieved by CssClass",
        "timeInterval": "deprecated-It is achieved by using settimeout in click event.",
        "type": "deprecated: It is achieved by using event listener",
        "width": "deprecated-It is achieved by CssClass",
        "disable": "deprecated-It is achieved by disabled Property",
        "enable": "deprecated-It is achieved by disabled Property",
        "click": "deprecated- It is achieved by using event listener",
        "create": "deprecated- It is achieved by using event listener",
        "destroy": "deprecated- It is achieved by using event listener"
    },
    "ejCheckBox": {
        "checked": "checked",
        "checkState": "checked",
        "cssClass": "cssClass",
        "enabled": "disabled",
        "enableRTL": "enableRTL",
        "enablePersistence": "enablePersistence",
        "enableTriState": "indeterminate",
        "htmlAttributes": "deprecated- It is achieved by using event listener",
        "id": "deprecated- It is achieved by using event listener",
        "idPrefix": "deprecated- It is achieved by using event listener",
        "name": "name",
        "value": "value",
        "showRoundedCorner": "deprecated-It is achieved by CssClass",
        "size": "deprecated-It is achieved by CssClass",
        "validationMessage": "deprecated-It is achieved by form-validator",
        "validationRules": "deprecated-It is achieved by form-validator",
        "disable": "deprecated-It is achieved by disabled Property",
        "enable": "deprecated-It is achieved by disabled Property",
        "destroy": "destroy",
        "isChecked": "deprecated-It is achieved by checked property",
        "create": "deprecated- It is achieved by using event listener",
        "destroy": "deprecated- It is achieved by using event listener",
        "beforeChange": "deprecated- It is achieved by using event listener",
        "change": "change",
    },
    "ejRadioButton": {
        "checked": "checked",
        "cssClass": "cssClass",
        "enabled": "disabled",
        "enableRTL": "enableRTL",
        "enablePersistence": "enablePersistence",
        "htmlAttributes": "deprecated: It is achieved by using event listener",
        "id": "deprecated: It is achieved by using event listener",
        "idPrefix": "deprecated: It is achieved by using event listener",
        "name": "name",
        "value": "value",
        "text": "label",
        "size": "deprecated-It is achieved by CssClass",
        "validationMessage": "deprecated-It is achieved by form-validator",
        "validationRules": "deprecated-It is achieved by form-validator",
        "disable": "deprecated-It is achieved by disabled Property",
        "enable": "deprecated-It is achieved by disabled Property",
        "destroy": "destroy",
        "create": "deprecated- It is achieved by using event listener",
        "destroy": "deprecated- It is achieved by using event listener",
        "beforeChange": "deprecated- It is achieved by using event listener",
        "change": "change",
    },
    "ejDropDownList": {
        "allowVirtualScrolling": "deprecated - It is achieved by using serve side data operation",
        "cascadeTo": "deprecated - It is achieved by using change event",
        "caseSensitiveSearch": "deprecated - It is achieved by server side operations.",
        "cssClass": "cssClass",
        "dataSource": "dataSource",
        "delimiterChar": "deprecated - It may be achieved by using event listener",
        "enableAnimation": "deprecated - It is achieved by using open event",
        "enabled": "enabled",
        "enableIncrementalSearch": "deprecated - It is achieved by usual searching operation.",
        "enableFilterSearch": "allowFiltering",
        "enableServerFiltering": "deprecated - It is achieved by using datamanager",
        "enablePersistence": "enablePersistence",
        "enablePopupResize": "deprecated -It is achieved by setting the popupWidth and popupHeight",
        "enableRTL": "enableRtl",
        "enableSorting": "sortOrder",
        "fields": "fields",
        "targetID": "deprecated - It is achieved by using appendTo method",
        "filterType": "Deprecated - It is achieved by using server side data operation",
        "headerTemplate": "headerTemplate",
        "height": "deprecated - It is achieved by using cssClass property.",
        "htmlAttributes": "htmlAttributes",
        "itemsCount": "deprecated - It is achieved by using open event",
        "locale": "locale",
        "maxPopupHeight": "deprecated - It is achieved by setting the popupHeight",
        "minPopupHeight": "deprecated - It is achieved by setting the popupHeight",
        "maxPopupWidth": "deprecated - It is achieved by setting the popupWidth",
        "minPopupWidth": "deprecated - It is achieved by setting the popupWidth",
        "popupHeight": "popupHeight",
        "popupWidth": "popupWidth",
        "query": "query",
        "readOnly": "readOnly",
        "selectedIndex": "index",
        "sortOrder": "sortOrder",
        "showRoundedCorner": "deprecated - It is achieved by using cssClass",
        "watermarkText": "placeholder",
        "width": "width",
        "text": "text",
        "value": "value",
        "addItem": "addItem",
        "hidePopup": "hidePopup",
        "showPopup": "showPopup",
        "hidePopup": "hidePopup",
        "actionBegin": "actionBegin",
        "actionComplete": "actionComplete",
        "actionFailure": "actionFailure",
        "change": "change",
        "focusIn": "focus",
        "focusOut": "focus",
        "select": "select"
    },

    "ejDatePicker": {
        "allowEdit": "deprecated -It can be achieved through readOnly property.",
        "allowDrillDown": "deprecated – It can be achieved through created event",
        "blackoutDates": "deprecated – It can be achieved through renderDayCell event.",
        "cssClass": "cssClass",
        "dateFormat": "format",
        "dayHeaderFormat": "deprecated -It can be achieved through created event.",
        "depthLevel": "depth",
        "displayInline": "deprecated – It can be achieved using preventDefault method.",
        "enableAnimation": "deprecated – It can be achieved through created event.",
        "enabled": "enabled",
        "enablePersistence": "enablePersistence",
        "enableRTL": "enableRtl",
        "enableStrictMode": "strictMode",
        "fields": "deprecated – fields (SpecialDates) can be achieved through renderDayCell event.",
        "headerFormat": "deprecated – It can be achieved through created Event.",
        "height": "deprecated – It can be achieved through cssClass property.",
        "highlightSection": "deprecated – It can be achieved through renderDayCell event",
        "highlightWeekend": "firstDayOfWeek",
        "htmlAttribute": "deprecated. It can be achieved by using the attribute in the input element.",
        "locale": "locale",
        "maxDate": "max",
        "minDate": "min",
        "readOnly": "readOnly",
        "showDisabledRange": "deprecated – It can be achieved through min and max property and renderCellEvent event.",
        "Showfooter": "showClearButton.",
        "showOtherMonths": "deprecated – It can be achieved through cssClass property.",
        "showPopupButton": "deprecated – It can be achieved through created event.",
        "showRoundedCorner": "deprecated – It can be achieved through cssClass property.",
        "showTooltip": "deprecated – It can be achieved through renderDayCell event.",
        "specialDates": "deprecated – fields (SpecialDates) can be achieved through renderDayCell event.",
        "startDay": "firstDayOfWeek",
        "startLevel": "start",
        "stepMonths": "deprecated , It can be achieved through navigated event with NavigateTo method.",
        "tooltipFormat": "deprecated – It can be achieved through renderDayCell event. ",
        "validationMessage": "deprecated – It can be achieved through EJ2 form validator.",
        "validationRules": "deprecated – It can be achieved through EJ2 form validator.",
        "value": "value",
        "watermarkText": "placeholder",
        "weekNumber": "deprecated – It can be achieved through created event.",
        "width": "deprecated – It can be achieved through cssClass property.",
        "disable": "deprecated – It can be achieved through enabled property",
        "enable": "deprecated – It can be achieved through enabled property",
        "getValue": "getPersistData",
        "hide": "hide",
        "show": "show",
        "beforeClose": "deprecated – It can be achieved through create event",
        "beforeDateCreate": "deprecated – It can be achieved through create event",
        "beforeOpen": "deprecated – It can be achieved through create event",
        "change": "change",
        "close": "close",
        "create": "created",
        "destroy": "destroyed",
        "focusIn": "focus",
        "focusOut": "blur",
        "navigate": "navigated",
        "select": "renderDayCell",
    },
    "ejAutocomplete": {
        "allowAddNew": "allowCustom",
        "allowSorting": "deprecated - It can be achieved through filtering,Change events",
        "sortOrder": "deprecated - It can be achieved through filtering,Change event",
        "cssClass": "cssClass",
        "dataSource": "dataSource",
        "caseSensitiveSearch": "ignoreCase",
        "highlightSearch": "highlight",
        "template": "itemTemplate",
        "fields": "fields",
        "minCharacter": "minLength",
        "validationMessage": "deprecated - It can achieved using the Ej2 form validator",
        "validationRules": "deprecated - It can achieved using the Ej2 form validator",
        "value": "value",
        "width": "width",
        "enableAutoFill": "",
        "filterType": "filterType",
        "popupHeight": "popupHeight",
        "popupWidth": "popupWidth",
        "query": "query",
        "readOnly": "readOnly",
        "showPopupButton": "showPopupButton",
        "showRoundedCorner": "deprecated - It cane be achieved through cssClass property",
        "showResetIcon": "showClearButton ",
        "watermarkText": "placeholder",
        "enableRTL": "enableRtl",
        "enabled": "enabled",
        "locale": "locale",
        "selectValueByKey": "getDataByValue",
        "destroy": "destroy",
        "selectValueByText": "deprecated - It can be achieved through custom ValueSpecifier event",
        "open": "showPopup",
        "hide": "hidePopup",
        "selectValueByKey": "getDataByValue",
        "getItems": "getSelectedItems",
        "enable": "deprecated - It can be achieved through enabled property",
        "disable": "deprecated - It cabe achieved through enbaled property",
        "actionBegin": "actionBegin",
        "actionComplete": "actionComplete",
        "actionFailure": "actionFailure",
        "change": "change",
        "close": "close",
        "open": "open",
        "destroy": "deprecated - It can be achieved through destroy method",
        "focus": "focusOut",
        "blur": "focusOut",
        "select": "select",
    },
    "ejToolbar": {
        "cssClass": "deprecated-It is achieved by using items.cssClass",
        "dataSource": "deprecated-It is achieved by using items property",
        "disabledItemIndices": "deprecated-It is achieved by using enableItmes method",
        "enabledItemIndices": "deprecated-It is achieved by using enableItmes method",
        "enabled": "deprecated-It is achieved by using enableItmes method",
        "enableRTL": "enableRtl",
        "enableSeparator": "deprecated-It is achieved by using items.type",
        "fields": "deprecated-It is achieved by using items property",
        "height": "height",
        "htmlAttributes": "deprecated-It is achieved by using items.htmlAttributes",
        "hide": "deprecated-It is achieved by using cssClass property",
        "isResponsive": "deprecated-It is achieved by using overflowMode",
        "orientation": "deprecated-It is achieved by using height and width property",
        "items": "items",
        "responsiveType": "overflowMode",
        "showRoundedCorner": "deprecated-It is achieved by using cssclass property",
        "width": "width",
        "removeItem": "removeItems",
        "enableItem": "enableItems",
        "removeItemByID": "removeItems",
        "enableItemByID": "enableItems",
        "destroy": "destroy",
        "deselctItem": "deprecated-It is achieved by using beforeCreate event",
        "deselectItemByID": "deprecated-It is achieved by using beforeCreate event",
        "selectItem": "deprecated-It is achieved by using beforeCreate event",
        "selectItemByID": "deprecated-It is achieved by using beforeCreate event",
        "show": "deprecated-It is achieved by using cssClass",
        "disable": "deprecated-It is achieved by using enableItmes method",
        "enable": "deprecated-It is achieved by using enableItmes method",
        "click": "clicked",
        "create": "created",
        "focusOut": "deprecated- It is achieved by using event listener",
        "itemHover": "deprecated- It is achieved by using event listener",
        "itemLeave": "deprecated- It is achieved by using event listener",
        "overflowOpen": "deprecated- It is achieved by using event listener",
        "overflowClose": "deprecated- It is achieved by using event listener",
    },
    "ejGrid": {
        "allowGrouping": "allowGrouping",
        "allowKeyboardNavigation": "deprecated-It is enabled by using keyboardModule event",
        "allowFiltering": "allowFiltering",
        "allowSorting": "allowSorting",
        "allowMultiSorting": "allowMultiSorting",
        "allowPaging": "allowPaging",
        "allowReordering": "allowReordering",
        "allowRowDragAndDrop": "allowRowDragAndDrop",
        "allowResizing": "Resizing",
        "allowSelection": "allowSelection",
        "allowTextWrap": "allowTextWrap",
        "allowScrolling": "deprecated- It is achieved by using scroll module",
        "allowSearching": "deprecated- It is achieved by using search module",
        "allowSelection": "allowSelection",
        "columns": "columns",
        "field": "field",
        "headerText": "headerText",
        "width": "width",
        "textAllign": "textAllign",
        "isPrimaryKey": "isPrimaryKey",
        "dataSource": "dataSource",
        "isIdentity": "isIdentity",
        "validationRules": "deprecated-It is acchieved by using form validator",
        "editType": "editType",
        "editSettings": "editSettings",
        "allowAdding": "allowAdding",
        "allowEditing": "allowEditing",
        "allowDeleting": "allowDeleting",
        "editMode": "mode",
        "allowEditOnDblClick": "allowEditOnDblClick",
        "filterSettings": "filterSettings",
        "showFilterBarStatus": "showFilterBarStatus",
        "filterType": "type",
        "pageSettings": "pageSettings",
        "template": "template",
        "addRecord": "addRecord",
        "clearFiltering": "clearFiltering",
        "clearSelection": "clearSelection",
        "clearSorting": "clearSorting",
        "destroy": "destroy",
        "deleteRecord": "deleteRecord",
        "deleteRow": "deleteRow",
        "endEdit": "endEdit",
        "isResponsive": "deprecated-It is responsive by default"

    },
    "ejNumericTextbox": {
        "cssClass": "cssClass",
        "currencySymbol": "currency",
        "decimalPlaces": "decimals",
        "enabled": "enabled",
        "enablePersistence": "enablePersistence",
        "enableRTL": "enableRtl",
        "enableStrictMode": "strictMode",
        "groupSize": "format",
        "watermarkText": "placeholder",
        "locale": "locale",
        "maxValue": "max",
        "minValue": "min",
        "name": "deprecated - It can be achieved through htmlAttribute name",
        "incrementStep": "step",
        "htmlAttribute": "deprecated - It can be achieved through appending html attributes in the input element",
        "height": "deprecated - It can be achieved through cssClass property",
        "width": "width",
        "showSpinButton": "showSpinButton",
        "showRoundedCorner": "deprecated - It can be achieved through cssClass property",
        "validateOnType": "validateDecimalOnType",
        "validationRules": "deprecated - It can be achieved through Ej2 form Validators",
        "validationMessage": "deprecated - It can be achieved through Ej2 form Validators",
        "value": "value",
        "negativePattern": "deprecated - It can be achieved through created event",
        "positivePattern": "deprecated - It can be achieved through created event",
        "destroy": "destroy",
        "disable": "deprecated - It can be achieved through enabled property",
        "enable": "deprecated - It can be achieved through enabled property",
        "getValue": "getPersistData",
        "change": "change",
        "create": "created",
        "destroy": "destroyed",
        "focusIn": "deprecated - It can be achieved through created event",
        "focusOut": "deprecated - It can be achieved through created event",
    },
    "ejAccordion": {
        "ajaxSettings": "deprecated- It is achieved by using ajax",
        "allowKeyboadNavigation": "deprecated:Keyboard navigation is enabled by default",
        "collapseSpeed": "deprecated- It is achieved by using animation property",
        "collapsible": "deprecated- It is achieved by using enableItem method",
        "cssClass": "deprecated- It is achieved by using arrodion item properties",
        "customIcon": "deprecated- It is achieved by using Accordion Item properties",
        "disableItems": "deprecated- It is achieved by using enableItem method",
        "enableAnimation": "deprecated-It is achieved by using animation property",
        "enable": "deprecated- It is achieved by using enableItem method",
        "enabledItems": "deprecated- It is achieved by using enableItem method",
        "enableMultipleOpen": "deprecated- It is achieved by using arrodion item properties",
        "enablePersistence": "enablePersistence",
        "enableRTL": "enableRtl",
        "expandSpeed": "deprecated- It is achieved by using animation property",
        "events": "",
        "header": "deprecated- It is achieved by using Accordion Item properties",
        "height": "height",
        "heightAdjustMode": "deprecated- It is achieved by using Accordion Item properties cssclass",
        "htmlAttributes": "deprecated- It is achieved by using created event",
        "showRoundedCorner": "deprecated- It is achieved by using Accordion Item properties cssclass",
        "width": "width",
        "selectedItems": "deprecated- It is achieved by using Accordion Item properties",
        "selectdItemIndex": "deprecated- It is achieved by using Accordion Item properties",
        "addItem": "addItem",
    }

};